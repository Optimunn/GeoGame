import { VerticalBox, GridBox } from "std-widgets.slint";
import { ImageResizable, ImageStatic} from "images.slint";
import { MyButton } from "mywidget.slint";

struct ButtonData {
    text: string,
    color: color
}

export component PrimeWindow inherits Rectangle {
    callback scene-visible;
    callback button-clicked(int);
    callback click-continue;

    in-out property <bool> visible_touch: false;
    in property <[ButtonData]> button-data: [ {},{},{},{} ];
    in property icon <=> img-res.icon;

    background: @linear-gradient(135deg,#fff1fc 0%, #4e4e4e 100%);

    v_box:= VerticalBox {
        alignment: center;
        padding-right: 20px;
        padding-left: 20px;

        Text {
            vertical-alignment: center;
            horizontal-alignment: center;
            font-size: 32px;
            text: @tr("What is country?");
        }

        img-res := ImageResizable { }

        function ret_width() -> length {
            return (root.width - grid_box.spacing * 3 -
                v_box.padding-left - v_box.padding-right) / 2;
        }

        function ret_height() -> length {
            return root.height / 10;
        }

        grid_box:= GridBox {
            MyButton {row: 0; border-color: root.button-data[0].color; width: ret_width();
                my_height: ret_height(); text: root.button-data[0].text;
                clicked => {root.button-clicked(0); root.visible_touch = true} }
            MyButton { border-color: root.button-data[1].color; width: ret_width();
                my_height: ret_height(); text: root.button-data[1].text;
                clicked => {root.button-clicked(1); root.visible_touch = true} }
            MyButton {row: 1; border-color: root.button-data[2].color; width: ret_width();
                my_height: ret_height(); text: root.button-data[2].text;
                clicked => {root.button-clicked(2); root.visible_touch = true} }
            MyButton { border-color: root.button-data[3].color; width: ret_width();
                my_height: ret_height(); text: root.button-data[3].text;
                clicked => {root.button-clicked(3); root.visible_touch = true} }
        }
    }

    TouchArea {
        visible: root.visible_touch;
        clicked => {
            root.visible_touch = false;
            root.click-continue();
        }
    }

    ImageStatic {
        icon: @image-url("../assets/icons/menu.svg");
        x: 0px;
        y: 0px;
        my_size: 30px;
        clicked => { root.scene-visible() }
    }
}
