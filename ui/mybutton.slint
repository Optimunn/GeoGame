export component MyButton inherits Rectangle {
    in-out property text <=> txt.text;
    in property <length> my_height: 40px;
    in property <color> my_color: #ffffff;
    callback clicked <=> touch.clicked;
    border-radius: root.height / 2;
    border-width: root.height / 8;
    height: my_height < 40px ? 40px : my_height;
    background: touch.pressed ? my_color.darker(25%) : my_color;
    txt := Text {
        font-size: parent.height / 2;
        width: parent.width - self.font-size;
        horizontal-alignment: center;
        vertical-alignment: center;
        color: #000000;
        font-weight: 800;
    }
    touch := TouchArea { }
}

export component ToggleSwitch inherits Rectangle {
    callback toggled;
    in-out property text <=> txt.text;
    in-out property <bool> checked;
    in-out property<bool> enabled <=> touch-area.enabled;
    height: 20px;
    horizontal-stretch: 0;
    vertical-stretch: 0;

    HorizontalLayout {
        spacing: 8px;
        indicator := Rectangle {
            width: root.height * 2;
            border-width: 1px;
            border-radius: root.height / 2;
            border-color: self.background.darker(25%);
            background: root.enabled ? (root.checked ? blue: white)  : white;
            animate background { duration: 100ms; }

            bubble := Rectangle {
                width: root.height - 8px;
                height: bubble.width;
                border-radius: bubble.height / 2;
                y: 4px;
                x: 4px + self.a * (indicator.width - bubble.width - 8px);
                property <float> a: root.checked ? 1 : 0;
                background: root.checked ? white : (root.enabled ? blue : gray);
                animate a, background { duration: 200ms; easing: ease;}
            }
        }

        txt := Text {
            font-size: parent.height / 1.2;
            min-width: max(100px, self.preferred-width);
            vertical-alignment: center;
            color: root.enabled ? black : gray;
        }
    }

    touch-area := TouchArea {
        width: root.width;
        height: root.height;
        clicked => {
            if (root.enabled) {
                root.checked = !root.checked;
                root.toggled();
            }
        }
    }
}