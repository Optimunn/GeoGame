import { VerticalBox, CheckBox, ComboBox } from "std-widgets.slint";
import { ImageStatic } from "images.slint";
import { MyText } from "mywidget.slint";
import { Tr } from "translation.slint";

component MyBox inherits VerticalLayout {
    in property text <=> txt.text;
    in-out property model <=> select-box.model;
    in-out property current-index <=> select-box.current-index;
    callback selected <=> select-box.selected;
    spacing: 5px;
    txt := Text {
        horizontal-alignment: center;
        font-size: 16px;
    }
    select-box := ComboBox { }
}

export component SettingsMenu inherits Rectangle {
    callback scene-visible;
    callback selected-button-color(int);
    callback selected-button-language(int);
    in-out property selected-color-index <=> select-color-box.current-index;
    in-out property selected-language-index <=> select-language-box.current-index;

    background: @linear-gradient(180deg,#e786d2 0%, #3a98e0 100%);

    private property <[string]> select-color:
        [ Tr.tr.gray, Tr.tr.freedom, Tr.tr.lavender, Tr.tr.bl-sky, Tr.tr.mandarin, Tr.tr.r-lime ];
    private property <[string]> select-language:
        [ "English", "Russian", "Simplified chinese" ];

    VerticalBox {
        padding-right: 20px;
        padding-top: 40px;
        spacing: 20px;
        padding-left: 20px;
        alignment: start;
        width: root.width / 1.8;

        MyText {
            text: Tr.tr.settings;
            height: root.width / 12;
        }

        select-color-box := MyBox {
            text: Tr.tr.sel-b-color;
            model: root.select-color;
            selected() => {
                root.selected-button-color(root.selected-color-index);
            }
        }

        select-language-box := MyBox {
            text: Tr.tr.sel-lang;
            model: root.select-language;
            selected() => {
                root.selected-button-language(root.selected-language-index);
            }
        }
    }

    ImageStatic {
        icon: @image-url("../assets/icons/cross.svg");
        x: 0px;
        y: 0px;
        my-size: 30px;
        clicked => { root.scene-visible() }
    }
}